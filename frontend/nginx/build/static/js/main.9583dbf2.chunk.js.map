{"version":3,"sources":["Components/Navbar/LinkList.js","utils.js","Components/Navbar/NavLink.js","Components/Navbar/NavButton.js","Components/Navbar/Navbar.js","Components/Container.js","Components/Buttons.js","Components/ProjectPost/ProjectPost.js","pages/Home.js","pages/About.js","Components/Form/TextInput.js","Components/Form/SubmitButton.js","Components/Form/FormContainer.js","Components/Message.js","pages/Login.js","store/reducers/loginReducer.js","store/reducers/registerReducer.js","store/reducers/validateReducer.js","store/reducers/messageReducer.js","store/reducers/rootReducer.js","store/index.js","Components/Form/InputContainer.js","pages/Register.js","App.js","serviceWorker.js","index.js"],"names":["timeout","LinkList","styled","ul","HOST","URL","process","debounce","time","callback","clearTimeout","setTimeout","StyledNavLink","Link","NavLink","to","name","href","NavButton","button","Nav","nav","connect","state","message","dispatch","history","useHistory","isLoggedIn","onClick","push","type","Container","section","InfoButton","StyledHeader","h2","StyledPoster","span","StyledPost","p","PostContainer","article","PosterLink","a","ProjectPost","header","poster","post","posterType","icon","color","mask","transform","style","background","Home","About","Label","label","TextInput","input","props","valid","noValidation","SubmitButton","disabled","FormContainer","div","MessageBox","success","error","Message","msg","size","login","username","password","isLoading","isError","isSuccess","console","log","useEffect","handleSubmit","e","preventDefault","value","fetch","method","headers","body","JSON","stringify","res","status","Error","textAlign","action","onSubmit","placeholder","onChange","field","currentTarget","spin","initialState","loginReducer","firstname","lastname","email","passwordconfirm","registerReducer","initalState","emailIsValid","firstnameIsValid","lastnameIsValid","passwordIsValid","passwordconfirmIsValid","validateReducer","isValid","messageReducer","rootReducer","combineReducers","register","validate","store","createStore","InputContainer","halfWidth","Header","h1","isFormValid","json","Number","validateEmail","blur","test","length","validateName","validatePassword","pass","onBlur","htmlFor","confirmPassword","library","add","faJsSquare","faCircle","faSquare","faEnvelope","faSpinner","faExclamationCircle","faCheckCircle","GlobalStyle","createGlobalStyle","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9583dbf2.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nconst LinkList = styled.ul`\n  display: inline-flex;\n  margin: 0;\n  padding: 0;\n`\n\nexport default LinkList","export let timeout\n\nconst debounce = (time, callback) => {\n  \n  clearTimeout(timeout)\n\n  timeout = setTimeout(() => {\n    callback()\n  }, time);\n}\n\nexport const HOST = process.env.NODE_ENV !== 'production' ? 'http://localhost:3333' : 'https://sebbe.dev'\n\nexport const URL = process.env.PUBLIC_URL || ''\n\nexport default debounce","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { URL } from '../../utils.js'\n\nconst StyledNavLink = styled(Link)`\n  color: #fff;\n  padding: 1em;\n  text-decoration: none;\n  font-weight: bold;\n  &:visited {\n    text-decoration: none;\n    color: #fff;\n  }\n  &:hover {\n    color: lightgray;\n  }\n`\n\nconst NavLink = ({ to, name }) => {\n  const href = URL + to\n  return (\n    <StyledNavLink to={href}>{name}</StyledNavLink>\n  )\n}\n\nexport default NavLink\n","import styled from 'styled-components'\n\nconst NavButton = styled.button`\n  padding: 1em 2em;\n  background-color: blue;\n  border: none;\n  font-weight: bold;\n  font-size: .8em;\n  color: #fff;\n  cursor: pointer;\n  margin-right: .5em;\n  border-radius: 5px;\n`\nexport default NavButton","import React from 'react'\nimport styled from 'styled-components'\nimport LinkList from './LinkList.js'\nimport NavLink from './NavLink.js'\nimport NavButton from './NavButton.js'\nimport { connect } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { URL } from '../../utils.js'\n\nconst Nav = styled.nav`\n  width: 100%;\n  background-color: blue;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nconst Navbar = ({ message, dispatch }) => {\n  const history = useHistory()\n\n  const userLogin = () => history.push(URL + '/login')\n  const userLogout = () => dispatch({ type: 'message-logout' })\n  const userRegister = () => history.push(URL + '/register')\n\n  return (\n    <Nav>\n      <LinkList>\n        <NavLink to='/' name='Hem' />\n        <NavLink to='/about' name='Om' />\n      </LinkList>\n      <div>\n        {!message.isLoggedIn && <NavButton onClick={userRegister}>Registrera</NavButton>}\n        <NavButton\n        onClick={message.isLoggedIn ? userLogout : userLogin}\n      >\n        {message.isLoggedIn ? 'Logga ut' : 'Logga in'}\n      </NavButton>\n      </div>\n    </Nav>\n  )\n}\n\nconst mapStateToProps = state => ({ message: state.message })\n\nexport default connect(mapStateToProps)(Navbar)\n","import styled from 'styled-components'\n\nconst Container = styled.section`\n  max-width: 1024px;\n  width: 100%;\n  padding: 0 1em;\n  background-color: #fff;\n`\n\nexport default Container","import styled from 'styled-components'\n\nexport const InfoButton = styled.button`\n  padding: 1em 2em;\n  background-color: blue;\n  border: none;\n  font-weight: bold;\n  font-size: .8em;\n  color: #fff;\n  cursor: pointer;\n  margin-right: .5em;\n  margin-left: auto;\n  border-radius: 5px;\n`\n\n","import React from 'react'\nimport styled from 'styled-components'\nimport { InfoButton } from '../Buttons.js'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst StyledHeader = styled.h2`\n  font-size: 1.3em;\n  margin-top: 2em;\n`\n\nconst StyledPoster = styled.span`\n  font-size: .8em;\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  font-weight: bold;\n  padding: .5em;\n  padding-bottom: 0;\n  margin-left: .5em;\n`\n\nconst StyledPost = styled.p`\n  margin: 1em;\n`\n\nconst PostContainer = styled.article`\n  width: 100%;\n  box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);\n  border-radius: 5px;\n  padding: 1em;\n  margin: 2em 0;\n  position: relative;\n`\n\nconst PosterLink = styled.a`\n  text-decoration: none;\n  &:visited {\n    color: blue;\n  }\n`\n\nconst ProjectPost = ({header, poster, post, posterType}) => {\n  return (\n    <PostContainer>\n      <StyledHeader>{header}</StyledHeader>\n      <StyledPoster>\n        <PosterLink href=\"#\">\n          <FontAwesomeIcon\n            icon={['far', 'envelope']}\n          />\n          <span> {poster}</span>\n        </PosterLink>\n        <span> - </span> \n        <FontAwesomeIcon\n          icon={['fab', 'js-square']}\n          color='black'\n          mask={['fas', 'square']}\n          transform='grow-1'\n          style={{background: 'yellow'}}\n        /> \n        <span> {posterType}</span>\n      </StyledPoster>\n      <StyledPost>{post}</StyledPost>\n      <InfoButton>Svara</InfoButton>\n    </PostContainer>\n  )\n}\n\nexport default ProjectPost\n","import React from 'react'\nimport Container from '../Components/Container.js'\nimport ProjectPost from '../Components/ProjectPost/ProjectPost.js'\n\nconst Home = () => {\n  return (\n    <Container>\n      <h1>Studentprojekt</h1>\n      <ProjectPost\n        header='Mitt projekt!'\n        poster='Sebastian Alexandersson'\n        post='Bla bla bla bla bla Bla bla bla bla bla Bla bla bla bla bla Bla bla bla bla bla Bla bla bla bla bla'\n        posterType='Javascriptutveckalare'\n      />\n      <ProjectPost\n        header='Mitt projekt!'\n        poster='Sebastian Alexandersson'\n        post='Bla bla bla bla bla Bla bla bla bla bla Bla bla bla bla bla Bla bla bla bla bla Bla bla bla bla bla'\n        posterType='Javascriptutveckalare'\n      />\n      <ProjectPost\n        header='Mitt projekt!'\n        poster='Sebastian Alexandersson'\n        post='Bla bla bla bla bla Bla bla bla bla bla Bla bla bla bla bla Bla bla bla bla bla Bla bla bla bla bla'\n        posterType='Javascriptutveckalare'\n      />\n      <ProjectPost\n        header='Mitt projekt!'\n        poster='Sebastian Alexandersson'\n        post='Bla bla bla bla bla Bla bla bla bla bla Bla bla bla bla bla Bla bla bla bla bla Bla bla bla bla bla'\n        posterType='Javascriptutveckalare'\n      />\n    </Container>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport Container from '../Components/Container.js'\n\nconst About = () => {\n  return (\n    <Container>\n      <h1>About!</h1>\n    </Container>\n  )\n}\n\nexport default About","import styled from 'styled-components'\n\nexport const Label = styled.label`\n  position: absolute;\n  top: 0;\n  left: 0;\n  color: red;\n  font-size: .8em;\n`\n\nconst TextInput = styled.input`\n  border: 1px solid gray;\n  border-color: ${props => props.valid === true ? 'green' : props.valid === null ? 'none' : props.noValidation ? 'none' : 'red'};\n  padding: 1em;\n  margin: 1em 0;\n  width: 100%;\n  font-size: 1em;\n  &:focus {\n    outline: ${props => props.valid === null || props.noValidation ? '1px solid blue' : 'none'};\n  }\n`\nexport default TextInput","import styled from 'styled-components'\n\nconst SubmitButton = styled.button`\n  width: 100%;\n  border: none;\n  padding: 1em 2em;\n  font-weight: bold;\n  color: #fff;\n  outline: none;\n  background-color: ${props => props.disabled ? 'darkblue' : 'blue'};\n  font-size: 1em;\n  border-radius: 5px;\n  cursor: pointer;\n`\n\nexport default SubmitButton","import styled from 'styled-components'\n\nconst FormContainer = styled.div`\n  margin: auto;\n  width: 100%;\n  max-width: 600px;\n  padding: 2em 1.5em;\n  box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);\n  background-color: #fff;\n`\n\nexport default FormContainer","import React from 'react'\nimport styled from 'styled-components'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst MessageBox = styled.div`\n  width: 100%;\n  color: #fff;\n  padding: 1em;\n  background-color: ${props => props.success ? 'green' : props.error ? 'red' : 'transparent'};\n  display: ${props => !props.success && !props.error ? 'none' : 'flex'};\n  align-items: center;\n  border-radius: 5px;\n  box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);\n  span {\n    margin-left: 1em;\n  }\n`\n\nconst Message = ({ error, success, msg }) => {\n  return (\n    <MessageBox\n      error={error}\n      success={success}\n    >\n      {error && <><FontAwesomeIcon icon={['fas', 'exclamation-circle']} size='2x' /><span>{msg}</span></>}\n      {success && <><FontAwesomeIcon icon={['fas', 'check-circle']} size='2x' /><span>{msg}</span></>}\n\n    </MessageBox>\n  )\n}\n\nexport default Message\n","import React, { useEffect } from 'react'\nimport TextInput from '../Components/Form/TextInput.js'\nimport SubmitButton from '../Components/Form/SubmitButton.js'\nimport FormContainer from '../Components/Form/FormContainer.js'\nimport { connect } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport Message from '../Components/Message.js'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { HOST, URL } from '../utils.js'\n\nconst Login = ({ login, message, dispatch }) => {\n  const {\n    username,\n    password,\n    isLoading,\n  } = login\n\n  const {\n    isError,\n    isSuccess,\n    msg\n  } = message\n\n  const history = useHistory()\n\n  console.log(`${HOST}`)\n\n  useEffect(() => {\n    return () => {\n      dispatch({ type: 'message-reset' })\n      dispatch({ type: 'register-reset' })\n      dispatch({ type: 'validate-reset' })\n    }\n  }, [dispatch])\n\n  const handleSubmit = async e => {\n    e.preventDefault()\n    try {\n      dispatch( { type: 'message-reset' })\n      dispatch({ type: 'login-loading', value: true })\n      const res = await fetch(`${HOST}${URL}/api/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({username, password})\n      })\n      if(res.status === 200) {\n        dispatch({ type: 'message-success', msg: 'Inloggning lyckades.' })\n        dispatch({ type: 'login-success' })\n        dispatch({ type: 'message-login' })\n        setTimeout(() => {\n          history.push(URL + '/')\n          dispatch({ type: 'message-reset' })\n        }, 1000)\n        return\n      } else if(res.status === 401) {\n        dispatch({ type: 'login-error' })\n        dispatch({ type: 'message-error', msg: 'Felaktigt användarnamn eller lösenord.'})\n        return\n      } else if(res.status === 400) {\n        dispatch({ type: 'login-error' })\n        dispatch({ type: 'message-error', msg: 'Saknas användarnamn och/eller lösenord.'})\n        return\n      } else {\n        throw Error\n      }\n    } catch(error) {\n      dispatch({ type: 'login-error' })\n      dispatch({ type: 'message-error', msg: 'Nånting gick fel...' })\n    }\n  }\n\n  return (\n    <FormContainer>\n      <h1 style={{ textAlign: 'center' }}>Logga in</h1>\n      <Message\n        error={isError}\n        success={isSuccess}\n        msg={msg}\n      />\n      <form action='#' onSubmit={handleSubmit}>\n        <TextInput\n        name='username'\n        type='text'\n        placeholder='Användarnamn'\n        onChange={e => dispatch({ type: 'login-input', field: 'username', value: e.currentTarget.value })}\n        value={username}\n        noValidation={true}\n      />\n      <TextInput\n        name='password'\n        type='password'\n        placeholder='Lösenord'\n        onChange={e => dispatch({ type: 'login-input', field: 'password', value: e.currentTarget.value })}\n        value={password}\n        noValidation={true}\n      />\n      <SubmitButton\n        type='submit'\n        disabled={isLoading}\n      >\n        {isLoading ? <><FontAwesomeIcon icon={['fas', 'spinner']} spin /> Logga in</> : 'Logga in'}\n      </SubmitButton>\n      </form>\n    </FormContainer>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    login: state.login,\n    message: state.message\n  }\n}\n\nexport default connect(mapStateToProps)(Login)\n","const initialState = {\n  username: '',\n  password: '',\n  isLoading: false\n}\n\nconst loginReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case 'login-loading': {\n      return {\n        ...state,\n        isLoading: true\n      }\n    }\n    case 'login-input': {\n      return {\n        ...state,\n        [action.field]: action.value\n      }\n    }\n    case 'login-success': {\n      return {\n        ...state,\n        username: '',\n        password: '',\n        isLoading: false\n      }\n    }\n    case 'login-error': {\n      return {\n        ...state,\n        password: '',\n        isLoading: false\n      }\n    }\n    default:\n      break\n  }\n  return state\n}\n\nexport default loginReducer","const initialState = {\n  firstname: '',\n  lastname: '',\n  email: '',\n  password: '',\n  passwordconfirm: '',\n  msg: '',\n  isLoading: false,\n}\n\nconst registerReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case 'register-loading': {\n      return {\n        ...state,\n        isLoading: action.value\n      }\n    }\n    case 'register-input': {\n      return {\n        ...state,\n        [action.field]: action.value\n      }\n    }\n    case 'register-reset': {\n      return {\n        ...state,\n        firstname: '',\n        lastname: '',\n        email: '',\n        password: '',\n        passwordconfirm: '',\n        isLoading: false,\n      }\n    }\n    default:\n      break\n  }\n  return state\n}\n\nexport default registerReducer","const initalState = {\n    emailIsValid: null,\n    firstnameIsValid: null,\n    lastnameIsValid: null,\n    passwordIsValid: null,\n    passwordconfirmIsValid: null,\n  }\n\n  const validateReducer = (state = initalState, action) => {\n    switch(action.type) {\n      case 'validate-email': {\n        return {\n          ...state,\n          emailIsValid: action.isValid\n        }\n      }\n      case 'validate-name': {\n        return {\n          ...state,\n          [action.field + 'IsValid']: action.isValid\n        }\n      }\n      case 'validate-password': {\n        return {\n          ...state,\n          passwordIsValid: action.isValid\n        }\n      }\n      case 'validate-passwordconfirm': {\n        return {\n          ...state,\n          passwordconfirmIsValid: action.isValid\n        }\n      }\n      case 'validate-reset': {\n        return {\n          ...state,\n          emailIsValid: null,\n          firstnameIsValid: null,\n          lastnameIsValid: null,\n          passwordIsValid: null,\n          passwordconfirmIsValid: null,\n        }\n      }\n      default:\n        break\n    }\n    return state\n  }\n\nexport default validateReducer","const initialState = {\n  isError: false,\n  isLoggedIn: false,\n  isSuccess: false,\n  msg: '',\n}\n\nconst messageReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case 'message-error': {\n      return {\n        ...state,\n        isError: true,\n        isSuccess: false,\n        msg: action.msg\n      }\n    }\n    case 'message-success': {\n      return {\n        ...state,\n        isSuccess: true,\n        isError: false,\n        msg: action.msg\n      }\n    }\n    case 'message-login': {\n      return {\n        ...state,\n        isLoggedIn: true\n      }\n    }\n    case 'message-logout': {\n      return {\n        ...state,\n        isLoggedIn: false\n      }\n    }\n    case 'message-reset': {\n      return {\n        ...state,\n        isError: false,\n        isSuccess: false,\n        msg: ''\n      }\n    }\n    default:\n      break\n  }\n  return state\n}\n\nexport default messageReducer","import { combineReducers } from 'redux'\nimport loginReducer from './loginReducer.js'\nimport registerReducer from './registerReducer.js'\nimport validateReducer from './validateReducer.js'\nimport messageReducer from './messageReducer.js'\n\nconst rootReducer = combineReducers({\n  login: loginReducer,\n  register: registerReducer,\n  validate: validateReducer,\n  message: messageReducer\n})\n\nexport default rootReducer","import { createStore } from 'redux'\nimport rootReducer from './reducers/rootReducer.js'\n\nconst store = createStore(rootReducer)\n\nexport default store","import styled from 'styled-components'\n\nconst InputContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  position: relative;\n  width: ${props => props.halfWidth ? '49%' : '100%'};\n`\n\nexport default InputContainer","import React, { useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\nimport TextInput, { Label } from '../Components/Form/TextInput.js'\nimport SubmitButton from '../Components/Form/SubmitButton.js'\nimport FormContainer from '../Components/Form/FormContainer.js'\nimport InputContainer from '../Components/Form/InputContainer.js'\nimport { connect } from 'react-redux'\nimport debounce, { timeout } from '../utils.js'\nimport Message from '../Components/Message.js'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { HOST, URL } from '../utils.js'\n\nconst Header = styled.h1`\n  text-align: center;\n`\n\nconst Register = \n  ({ \n    register,\n    validate, \n    message,\n    isFormValid,\n    dispatch \n  }) => {\n\n  const {\n    isLoading,\n    password,\n    passwordconfirm,\n    firstname,\n    lastname,\n    email,\n  } = register\n\n  const {\n    emailIsValid,\n    firstnameIsValid,\n    lastnameIsValid,\n    passwordIsValid,\n    passwordconfirmIsValid,\n  } = validate\n\n  const {\n    isError,\n    isSuccess,\n    msg,\n  } = message\n\n  const history = useHistory()\n\n  useEffect(() => {\n    return () => {\n      dispatch({ type: 'message-reset' })\n      dispatch({ type: 'register-reset' })\n      dispatch({ type: 'validate-reset' })\n    }\n  }, [dispatch])\n\n  const handleSubmit = async e => {\n    e.preventDefault()\n    dispatch({ type: 'register-loading', value: true})\n    try {\n       const res = await fetch(`${HOST}/api/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ email, firstname, lastname, password, passwordconfirm })\n      })\n      if(res.status !== 200) {\n        console.log(res.json())\n        throw Error(res.message)\n      }\n      dispatch({ type: 'message-success', msg: 'Registrering lyckades.' })\n      dispatch({ type: 'register-reset' })\n      dispatch({ type: 'validate-reset' })\n      debounce(1000, () => history.push(URL + '/'))\n      } catch(error) {\n        if(Number(error.message) === 400) {\n          dispatch({ type: 'message-error', msg: 'Validering misslyckades.' })\n          dispatch({ type: 'register-reset '})\n          dispatch({ type: 'validate-reset '})\n        } else if(Number(error.message) === 401) {\n          dispatch({ type: 'message-error', msg: 'E-mail är redan registrerad.' })\n          dispatch({ type: 'register-input', field: 'email', value: '' })\n          dispatch({ type: 'register-input', field: 'password', value: '' })\n          dispatch({ type: 'register-input', field: 'passwordconfirm', value: '' })\n          dispatch({ type: 'validate-email', isValid: null })\n          dispatch({ type: 'validate-password', isValid: null })\n          dispatch({ type: 'validate-passwordconfirm', isValid: null })\n          dispatch({ type: 'register-loading', value: false })\n        } else if(Number(error.message) === 500) {\n          dispatch({ type: 'message-error', msg: 'Något gick fel med servern...' })\n          dispatch({ type: 'register-reset '})\n          dispatch({ type: 'validate-reset '})\n        } else {\n          dispatch({ type: 'message-error', msg: 'Något gick fel... någonstans...' })\n          dispatch({ type: 'register-reset '})\n          dispatch({ type: 'validate-reset '})\n        }\n      }\n  }\n\n  const validateEmail = async (email, blur = false) => {\n    const isValid = /^[\\w.]+@iths.se$/i.test(email)\n    dispatch({ type: 'register-input', field: 'email', value: email })\n    if(email.length === 0) {\n      clearTimeout(timeout)\n      dispatch({ type: 'validate-email', isValid: null })\n    } else if(blur) {\n      clearTimeout(timeout)\n      dispatch({ type: 'validate-email', isValid: isValid })\n    } else {\n      debounce(1000, () => {\n        dispatch({ type: 'validate-email', isValid: isValid })\n      })\n    }\n  }\n\n  const validateName = (name, field, blur = false) => {\n    const isValid = /^[a-z]+$/i.test(name)\n    if(name.length === 0) {\n      clearTimeout(timeout)\n      dispatch({ type: 'validate-name', isValid: null, field: field })\n    } else if(blur) {\n      clearTimeout(timeout)\n      dispatch({ type: 'validate-name', isValid: isValid, field: field })\n    } else {\n      debounce(1000, () => dispatch({ type: 'validate-name', isValid: isValid, field: field }))\n    }\n    dispatch({ type: 'register-input', field: field, value: name })\n  }\n\n  const validatePassword = (pass, blur = false) => {\n    const isValid = /.{8,}/.test(pass)\n    if(pass.length === 0) {\n      clearTimeout(timeout)\n      dispatch({ type: 'validate-password', isValid: null })\n    } else if(blur) {\n      clearTimeout(timeout)\n      dispatch({ type: 'validate-password', isValid: isValid })\n    } else {\n      debounce(1000, () => dispatch({ type: 'validate-password', isValid: isValid }))\n    }\n    dispatch({ type: 'register-input', field: 'password', value: pass })\n  }\n\n  const confirmPassword = pass => {\n    const isValid = pass === password\n    if(pass.length === 0) {\n      clearTimeout(timeout)\n      dispatch({ type: 'validate-passwordconfirm', isValid: null })\n    } else if(pass.length >= 8) {\n      debounce(500, () => dispatch({ type: 'validate-passwordconfirm', isValid: isValid }))\n    }\n    dispatch({ type: 'register-input', field: 'passwordconfirm', value: pass })\n  }\n\n  return (\n    <FormContainer>\n      <Header>Registrering</Header>\n      <Message error={isError} success={isSuccess} msg={msg} />\n      <form \n        onSubmit={handleSubmit}\n      >\n        <InputContainer>\n          <TextInput\n            name='email'\n            type='text'\n            placeholder='E-mail'\n            onChange={e => validateEmail(e.currentTarget.value)}\n            value={email}\n            valid={emailIsValid}\n            onBlur={e => validateEmail(e.currentTarget.value, true)}\n          />\n          {!emailIsValid && emailIsValid !== null && <Label htmlFor='email'>Ange giltlig e-postadress som slutar på @iths.se</Label>}\n        </InputContainer>\n        <InputContainer>\n          <InputContainer halfWidth>\n            <TextInput\n              name='firstname'\n              type='text'\n              placeholder='Förnamn'\n              onChange={e => validateName(e.currentTarget.value, 'firstname')}\n              value={firstname}\n              valid={firstnameIsValid}\n              onBlur={e => validateName(e.currentTarget.value, 'firstname', true)}\n            />\n            {!firstnameIsValid && firstnameIsValid !== null &&\n            <Label htmlFor='firstname'>Endast bokstäver</Label>}\n          </InputContainer>\n          <InputContainer halfWidth>\n            <TextInput\n              name='lastname'\n              type='text'\n              placeholder='Efternamn'\n              onChange={e => validateName(e.currentTarget.value, 'lastname')}\n              value={lastname}\n              valid={lastnameIsValid}\n              onBlur={e => validateName(e.currentTarget.value, 'lastname', true)}\n            />\n            {!lastnameIsValid && lastnameIsValid !== null &&\n            <Label htmlFor='lastname'>Endast bokstäver</Label>}\n          </InputContainer>\n        </InputContainer>\n        <InputContainer>\n          <TextInput\n            name='password'\n            type='password'\n            placeholder='Lösenord'\n            onChange={e => validatePassword(e.currentTarget.value)}\n            value={password}\n            valid={passwordIsValid}\n            onBlur={e => validatePassword(e.currentTarget.value, true)}\n          />\n          {!passwordIsValid && passwordIsValid !== null &&\n          <Label htmlFor='password'>Minst 8 tecken</Label>}\n        </InputContainer>\n        <InputContainer>\n          <TextInput\n            name='passwordconfirm'\n            type='password'\n            placeholder='Bekräfta lösenord'\n            onChange={e => confirmPassword(e.currentTarget.value)}\n            value={passwordconfirm}\n            valid={passwordconfirmIsValid}\n          />\n          {!passwordconfirmIsValid && passwordconfirmIsValid !== null &&\n          <Label htmlFor='password'>Lösenord måste matcha</Label>}\n        </InputContainer>\n        <SubmitButton\n          type='submit'\n          disabled={isLoading || !isFormValid }\n        >\n          {isLoading ? <><FontAwesomeIcon icon={['fas', 'spinner']} spin /> Registrera</> : 'Registrera'}\n        </SubmitButton>\n      </form>\n    </FormContainer>\n  )\n}\n\nconst isFormValid = state => {\n    return state.validate.emailIsValid\n      && state.validate.firstnameIsValid\n      && state.validate.lastnameIsValid\n      && state.validate.passwordIsValid\n      && state.validate.passwordconfirmIsValid\n  }\n\nconst mapStateToProps = state => {\n  return {\n    register: state.register,\n    validate: state.validate,\n    message: state.message,\n    isFormValid: isFormValid(state)\n  }\n}\n\nexport default connect(mapStateToProps)(Register)\n","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\"\nimport { createGlobalStyle } from 'styled-components'\nimport Navbar from './Components/Navbar/Navbar.js'\nimport Home from './pages/Home.js'\nimport About from './pages/About.js'\nimport Login from './pages/Login.js'\nimport { Provider } from 'react-redux'\nimport store from './store/index.js'\nimport Register from './pages/Register.js'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faJsSquare } from '@fortawesome/free-brands-svg-icons'\nimport { faCircle, faSquare, faSpinner, faExclamationCircle, faCheckCircle } from '@fortawesome/free-solid-svg-icons'\nimport { faEnvelope } from '@fortawesome/free-regular-svg-icons'\nimport { URL } from './utils'\n\nlibrary.add(\n  faJsSquare,\n  faCircle,\n  faSquare,\n  faEnvelope,\n  faSpinner,\n  faExclamationCircle,\n  faCheckCircle,\n  )\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n  }\n\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: 'Roboto', sans-serif;\n    background-color: rgba(0,0,0,.03)\n  }\n\n  #root {\n      width: 100vw;\n      max-width: 100vw;\n      display: flex;\n      align-items: center;\n      flex-direction: column;\n    }\n`\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Router>\n        <GlobalStyle />\n        <Navbar />\n        <Switch>\n          <Route exact path={`${URL}/`}>\n            <Home />\n          </Route>\n          <Route path={`${URL}/about`}>\n            <About />\n          </Route>\n          <Route path={`${URL}/login`}>\n            <Login />\n          </Route>\n          <Route path={`${URL}/register`}>\n            <Register />\n          </Route>\n        </Switch>\n      </Router>\n    </Provider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}