{"version":3,"sources":["Components/Navbar/LinkList.js","utils.js","Components/Navbar/NavLink.js","Components/Navbar/NavButton.js","store/actions/login.js","store/actionTypes/login.js","Components/Navbar/Navbar.js","Components/Container.js","Components/Buttons.js","Components/ProjectPost/ProjectPost.js","pages/Home.js","pages/About.js","Components/Form/TextField.js","Components/Form/SubmitButton.js","Components/Form/FormContainer.js","Components/Message.js","pages/Login.js","store/reducers/loginReducer.js","store/reducers/registerReducer.js","store/actionTypes/register.js","store/reducers/rootReducer.js","store/index.js","store/actions/register.js","pages/Register.js","App.js","serviceWorker.js","index.js"],"names":["timeout","LinkList","styled","ul","HOST","URL","process","debounce","time","callback","clearTimeout","setTimeout","StyledNavLink","Link","NavLink","to","name","href","NavButton","button","error","msg","type","submitLogin","username","password","dispatch","a","isLoading","fetch","method","headers","body","JSON","stringify","res","status","Error","Number","message","Nav","nav","connect","state","login","history","useHistory","userLogout","console","log","isLoggedIn","onClick","push","Container","section","InfoButton","StyledHeader","h2","StyledPoster","span","StyledPost","p","PostContainer","article","PosterLink","ProjectPost","header","poster","post","posterType","icon","color","mask","transform","style","background","Home","About","StyledInput","input","props","isValid","halfWidth","Label","label","TextField","valid","onChange","onBlur","value","placeholder","SubmitButton","disabled","FormContainer","maxWidth","MessageBox","div","success","Message","size","isError","isSuccess","useEffect","handleSubmit","e","preventDefault","actions","then","catch","err","handleChange","field","target","action","onSubmit","spin","initialState","loginReducer","firstname","lastname","email","passwordconfirm","firstnameIsValid","lastnameIsValid","emailIsValid","passwordIsValid","passwordconfirmIsValid","registerReducer","rootReducer","combineReducers","register","store","createStore","applyMiddleware","thunk","validateInput","getState","length","test","isFormValid","className","htmlFor","library","add","faJsSquare","faCircle","faSquare","faEnvelope","faSpinner","faExclamationCircle","faCheckCircle","GlobalStyle","createGlobalStyle","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c396344c.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nconst LinkList = styled.ul`\n  display: inline-flex;\n  margin: 0;\n  padding: 0;\n`\n\nexport default LinkList","export let timeout\n\nconst debounce = (time, callback) => {\n  \n  clearTimeout(timeout)\n\n  timeout = setTimeout(() => {\n    callback()\n  }, time);\n}\n\nexport const HOST = process.env.NODE_ENV !== 'production' ? 'http://localhost:3333' : 'https://sebbe.dev/studentprojekt'\n\nexport const URL = process.env.PUBLIC_URL || ''\n\nexport default debounce","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { URL } from '../../utils.js'\n\nconst StyledNavLink = styled(Link)`\n  color: #fff;\n  padding: 1em;\n  text-decoration: none;\n  font-weight: bold;\n  &:visited {\n    text-decoration: none;\n    color: #fff;\n  }\n  &:hover {\n    color: lightgray;\n  }\n`\n\nconst NavLink = ({ to, name }) => {\n  const href = URL + to\n  return (\n    <StyledNavLink to={href}>{name}</StyledNavLink>\n  )\n}\n\nexport default NavLink\n","import styled from 'styled-components'\n\nconst NavButton = styled.button`\n  padding: 1em 2em;\n  background-color: blue;\n  border: none;\n  font-weight: bold;\n  font-size: .8em;\n  color: #fff;\n  cursor: pointer;\n  margin-right: .5em;\n  border-radius: 5px;\n`\nexport default NavButton","import * as types from '../actionTypes/login.js'\nimport { HOST } from '../../utils.js'\n\nexport const input = field => ({\n  type: types.LOGIN_INPUT,\n  name: field.name,\n  value: field.value\n})\n\nexport const success = msg => ({\n  type: types.LOGIN_SUCCESS,\n  msg\n})\n\nexport const error = msg => ({\n  type: types.LOGIN_ERROR,\n  msg\n})\n\nexport const loading = state => ({\n  type: types.LOGIN_LOADING,\n  isLoading: state\n})\n\nexport const logout = () => ({\n  type: types.LOGIN_LOGOUT,\n})\n\nexport const reset = () => ({\n  type: types.LOGIN_RESET\n})\n\nexport const submitLogin = (username, password) => async dispatch => {\n  dispatch(loading(true))\n\n  try {\n    const res = await fetch(`${HOST}/api/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({username, password})\n    })\n    \n    if(res.status !== 200) {\n      throw Error(res.status)\n    }\n\n    dispatch(success('Inloggning lyckades.'))\n\n  } catch(err) {\n    if(Number(err.message) === 401) {\n      dispatch(error('Felaktigt användarnamn eller lösenord.'))\n    } else {\n      dispatch(error('Nånting gick fel...'))\n    }\n    throw Error(err)\n  }\n}\n","export const LOGIN_INPUT = 'LOGIN_INPUT'\nexport const LOGIN_SUBMIT = 'LOGIN_SUBMIT'\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const LOGIN_ERROR = 'LOGIN_ERROR'\nexport const LOGIN_LOADING = 'LOGIN_LOADING'\nexport const LOGIN_LOGOUT = 'LOGIN_LOGOUT'\nexport const LOGIN_RESET = 'LOGIN_RESET'","import React from 'react'\nimport styled from 'styled-components'\nimport LinkList from './LinkList.js'\nimport NavLink from './NavLink.js'\nimport NavButton from './NavButton.js'\nimport { connect } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { URL, HOST } from '../../utils.js'\nimport { logout } from '../../store/actions/login.js'\n\nconst Nav = styled.nav`\n  width: 100%;\n  background-color: blue;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2em;\n`\n\nconst Navbar = ({ login, dispatch }) => {\n  const history = useHistory()\n\n  const userLogin = () => history.push(URL + '/login')\n  const userLogout = async () => {\n    try {\n      const res = await fetch(`${HOST}/api/logout`)\n      console.log(await res.status)\n      dispatch(logout())\n    } catch(error) {\n      console.log(error)\n    }\n  }\n  const userRegister = () => history.push(URL + '/register')\n\n  return (\n    <Nav>\n      <LinkList>\n        <NavLink to='/' name='Hem' />\n        <NavLink to='/about' name='Om' />\n      </LinkList>\n      <div>\n        {!login.isLoggedIn && <NavButton onClick={userRegister}>Registrera</NavButton>}\n        <NavButton\n        onClick={login.isLoggedIn ? userLogout : userLogin}\n      >\n        {login.isLoggedIn ? 'Logga ut' : 'Logga in'}\n      </NavButton>\n      </div>\n    </Nav>\n  )\n}\n\nconst mapStateToProps = state => ({ login: state.login })\n\nexport default connect(mapStateToProps)(Navbar)\n","import styled from 'styled-components'\n\nconst Container = styled.section`\n  max-width: 1024px;\n  width: 100%;\n  padding: 0 1em;\n  background-color: #fff;\n`\n\nexport default Container","import styled from 'styled-components'\n\nexport const InfoButton = styled.button`\n  padding: 1em 2em;\n  background-color: blue;\n  border: none;\n  font-weight: bold;\n  font-size: .8em;\n  color: #fff;\n  cursor: pointer;\n  margin-right: .5em;\n  margin-left: auto;\n  border-radius: 5px;\n`\n\n","import React from 'react'\nimport styled from 'styled-components'\nimport { InfoButton } from '../Buttons.js'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst StyledHeader = styled.h2`\n  font-size: 1.3em;\n  margin-top: 2em;\n`\n\nconst StyledPoster = styled.span`\n  font-size: .8em;\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  font-weight: bold;\n  padding: .5em;\n  padding-bottom: 0;\n  margin-left: .5em;\n`\n\nconst StyledPost = styled.p`\n  margin: 1em;\n`\n\nconst PostContainer = styled.article`\n  width: 100%;\n  box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);\n  border-radius: 5px;\n  padding: 1em;\n  margin: 2em 0;\n  position: relative;\n`\n\nconst PosterLink = styled.a`\n  text-decoration: none;\n  &:visited {\n    color: blue;\n  }\n`\n\nconst ProjectPost = ({header, poster, post, posterType}) => {\n  return (\n    <PostContainer>\n      <StyledHeader>{header}</StyledHeader>\n      <StyledPoster>\n        <PosterLink href=\"#\">\n          <FontAwesomeIcon\n            icon={['far', 'envelope']}\n          />\n          <span> {poster}</span>\n        </PosterLink>\n        <span> - </span> \n        <FontAwesomeIcon\n          icon={['fab', 'js-square']}\n          color='black'\n          mask={['fas', 'square']}\n          transform='grow-1'\n          style={{background: 'yellow'}}\n        /> \n        <span> {posterType}</span>\n      </StyledPoster>\n      <StyledPost>{post}</StyledPost>\n      <InfoButton>Svara</InfoButton>\n    </PostContainer>\n  )\n}\n\nexport default ProjectPost\n","import React from 'react'\nimport Container from '../Components/Container.js'\nimport ProjectPost from '../Components/ProjectPost/ProjectPost.js'\n\nconst Home = () => {\n  return (\n    <Container>\n      <h1>Studentprojekt</h1>\n      <ProjectPost\n        header='Mitt projekt!'\n        poster='Sebastian Alexandersson'\n        post='Bla bla bla bla bla Bla bla bla bla bla Bla bla bla bla bla Bla bla bla bla bla Bla bla bla bla bla'\n        posterType='Javascriptutveckalare'\n      />\n      <ProjectPost\n        header='Mitt projekt!'\n        poster='Sebastian Alexandersson'\n        post='Bla bla bla bla bla Bla bla bla bla bla Bla bla bla bla bla Bla bla bla bla bla Bla bla bla bla bla'\n        posterType='Javascriptutveckalare'\n      />\n      <ProjectPost\n        header='Mitt projekt!'\n        poster='Sebastian Alexandersson'\n        post='Bla bla bla bla bla Bla bla bla bla bla Bla bla bla bla bla Bla bla bla bla bla Bla bla bla bla bla'\n        posterType='Javascriptutveckalare'\n      />\n      <ProjectPost\n        header='Mitt projekt!'\n        poster='Sebastian Alexandersson'\n        post='Bla bla bla bla bla Bla bla bla bla bla Bla bla bla bla bla Bla bla bla bla bla Bla bla bla bla bla'\n        posterType='Javascriptutveckalare'\n      />\n    </Container>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport Container from '../Components/Container.js'\n\nconst About = () => {\n  return (\n    <Container>\n      <h1>Om</h1>\n    </Container>\n  )\n}\n\nexport default About","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledInput = styled.input`\n  padding: 1em;\n  border: 1px solid;\n  border-color: ${props => props.isValid === true ? 'green' : props.isValid === null ? 'none' : 'red'};\n  margin: 1em 0;\n  width: ${props => props.halfWidth ? '49%' : '100%'};\n  font-size: 1em;\n  &:focus {\n    outline: ${props => props.isValid === null ? '1px solid blue' : 'none'};\n  }\n`\n\nexport const Label = styled.label`\n  position: absolute;\n  top: 0;\n  left: 0;\n  color: red;\n  font-size: .8em;\n`\n\nconst TextField = (props) => {\n  return (\n    <StyledInput\n      isValid={props.valid}\n      onChange={props.onChange}\n      onBlur={props.onBlur}\n      value={props.value}\n      type={props.type || 'text'}\n      name={props.name}\n      placeholder={props.placeholder}\n      halfWidth={props.halfWidth}\n    />\n  )\n}\n\nexport default TextField\n","import styled from 'styled-components'\n\nconst SubmitButton = styled.button`\n  width: 100%;\n  border: none;\n  padding: 1em 2em;\n  font-weight: bold;\n  color: #fff;\n  outline: none;\n  background-color: ${props => props.disabled ? 'darkblue' : 'blue'};\n  font-size: 1em;\n  border-radius: 5px;\n  cursor: pointer;\n`\n\nexport default SubmitButton","import styled from 'styled-components'\n\nconst FormContainer = styled.section`\n  margin: auto;\n  width: 100%;\n  max-width: ${props => props.maxWidth};\n  padding: 2em 1.5em;\n  box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);\n  background-color: #fff;\n  & .inputContainer {\n    display: flex;\n    position: relative;\n    width: 100%;\n    flex-direction: row;\n    justify-content: space-between;\n  }\n\n  & h1 {\n    text-align: center;\n  }\n`\n\nexport default FormContainer","import React from 'react'\nimport styled from 'styled-components'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst MessageBox = styled.div`\n  width: 100%;\n  color: #fff;\n  padding: 1em;\n  background-color: ${props => props.success ? 'green' : props.error ? 'red' : 'transparent'};\n  display: ${props => !props.success && !props.error ? 'none' : 'flex'};\n  align-items: center;\n  border-radius: 5px;\n  box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);\n  span {\n    margin-left: 1em;\n  }\n`\n\nconst Message = ({ error, success, msg }) => {\n  return (\n    <MessageBox\n      error={error}\n      success={success}\n    >\n      {error && <><FontAwesomeIcon icon={['fas', 'exclamation-circle']} size='2x' /><span>{msg}</span></>}\n      {success && <><FontAwesomeIcon icon={['fas', 'check-circle']} size='2x' /><span>{msg}</span></>}\n\n    </MessageBox>\n  )\n}\n\nexport default Message\n","import React, { useEffect } from 'react'\nimport TextField from '../Components/Form/TextField.js'\nimport SubmitButton from '../Components/Form/SubmitButton.js'\nimport FormContainer from '../Components/Form/FormContainer.js'\nimport { connect } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport Message from '../Components/Message.js'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport * as actions from '../store/actions/login.js'\nimport { URL } from '../utils.js'\n\nconst Login = ({ login, dispatch }) => {\n  const {\n    username,\n    password,\n    isLoading,\n    isError,\n    isSuccess,\n    msg\n  } = login\n\n  useEffect(() => {\n    return () => {\n      dispatch(actions.reset())\n    }\n  }, [dispatch])\n\n  const history = useHistory()\n\n  const handleSubmit = async e => {\n    e.preventDefault()\n    dispatch(actions.submitLogin(username, password))\n    .then(() => history.push('/' + URL))\n    .catch(err => err)\n  }\n\n  const handleChange = e => {\n    dispatch(actions.input({ name: e.target.name, value: e.target.value }))\n  }\n\n  return (\n    <FormContainer maxWidth='600px'>\n      <h1>Logga in</h1>\n      <Message\n        error={isError}\n        success={isSuccess}\n        msg={msg}\n      />\n      <form action='#' onSubmit={handleSubmit}>\n        <TextField\n        name='username'\n        type='text'\n        placeholder='Användarnamn'\n        onChange={handleChange}\n        value={username}\n        valid={null}\n      />\n      <TextField\n        name='password'\n        type='password'\n        placeholder='Lösenord'\n        onChange={handleChange}\n        value={password}\n        valid={null}\n      />\n      <SubmitButton\n        type='submit'\n        disabled={isLoading}\n      >\n        {isLoading ? <><FontAwesomeIcon icon={['fas', 'spinner']} spin /> Logga in</> : 'Logga in'}\n      </SubmitButton>\n      </form>\n    </FormContainer>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    login: state.login,\n  }\n}\n\nexport default connect(mapStateToProps)(Login)\n","import {\n  LOGIN_INPUT,\n  LOGIN_SUBMIT,\n  LOGIN_SUCCESS,\n  LOGIN_ERROR,\n  LOGIN_LOADING,\n  LOGIN_LOGOUT,\n  LOGIN_RESET\n} from '../actionTypes/login.js'\n\nconst initialState = {\n  username: '',\n  password: '',\n  isLoading: false,\n  isError: false,\n  isSuccess: false,\n  msg: '',\n  isLoggedIn: false\n}\n\nconst loginReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case LOGIN_LOADING: {\n      return {\n        ...state,\n        isLoading: action.isLoading\n      }\n    }\n    case LOGIN_INPUT: {\n      return {\n        ...state,\n        [action.name]: action.value\n      }\n    }\n    case LOGIN_SUCCESS: {\n      return {\n        ...state,\n        username: '',\n        password: '',\n        isLoading: false,\n        isError: false,\n        isSuccess: true,\n        msg: action.msg,\n        isLoggedIn: true\n      }\n    }\n    case LOGIN_ERROR: {\n      return {\n        ...state,\n        password: '',\n        isLoading: false,\n        isError: true,\n        isSuccess: false,\n        msg: action.msg\n      }\n    }\n    case LOGIN_SUBMIT: {\n      return {\n        ...state,\n        isLoading: true\n      }\n    }\n    case LOGIN_LOGOUT: {\n      return {\n        ...state,\n        isLoggedIn: false\n      }\n    }\n    case LOGIN_RESET: {\n      return {\n        ...state,\n        isSuccess: false,\n        isError: false,\n        msg: '',\n        username: '',\n        password: '',\n        isLoading: false\n      }\n    }\n    default:\n      break\n  }\n  return state\n}\n\nexport default loginReducer","import {\n  REGISTER_ERROR,\n  REGISTER_SUBMIT,\n  REGISTER_INPUT,\n  REGISTER_SUCCESS,\n  REGISTER_VALIDATE,\n  REGISTER_ERROR_EMAIL_TAKEN,\n  REGISTER_RESET,\n} from '../actionTypes/register.js'\n\nconst initialState = {\n  firstname: '',\n  lastname: '',\n  email: '',\n  password: '',\n  passwordconfirm:'',\n  firstnameIsValid: null,\n  lastnameIsValid: null,\n  emailIsValid: null,\n  passwordIsValid: null,\n  passwordconfirmIsValid: null,\n  isLoading: false,\n  isError: false,\n  isSuccess: false,\n  msg: '',\n}\n\nconst registerReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case REGISTER_SUBMIT: {\n      return {\n        ...state,\n        isLoading: true\n      }\n    }\n    case REGISTER_INPUT: {\n      return {\n        ...state,\n        [action.field.name]: action.field.value\n      }\n    }\n    case REGISTER_VALIDATE: {\n      return {\n        ...state,\n        [action.field.name + 'IsValid']: action.field.isValid\n      }\n    }\n    case REGISTER_SUCCESS: {\n      return {\n        ...state,\n        firstname: '',\n        lastname: '',\n        email: '',\n        password: '',\n        passwordconfirm: '',\n        firstnameIsValid: null,\n        lastnameIsValid: null,\n        emailIsValid: null,\n        passwordIsValid: null,\n        passwordconfirmIsValid: null,\n        isLoading: false,\n        isSuccess: true,\n        msg: 'Registrering lyckades. Ett mail har skickats till din e-mailadress. Följ länken för att verifiera ditt konto.'\n      }\n    }\n    case REGISTER_ERROR: {\n      return {\n        ...state,\n        firstname: '',\n        lastname: '',\n        email: '',\n        password: '',\n        passwordconfirm: '',\n        firstnameIsValid: null,\n        lastnameIsValid: null,\n        emailIsValid: null,\n        passwordIsValid: null,\n        passwordconfirmIsValid: null,\n        isLoading: false,\n        isSuccess: false,\n        isError: true,\n        msg: 'Nånting gick fel...'\n      }\n    }\n    case REGISTER_ERROR_EMAIL_TAKEN: {\n      return {\n        ...state,\n        email: '',\n        password: '',\n        passwordconfirm: '',\n        emailIsValid: null,\n        passwordIsValid: null,\n        passwordconfirmIsValid: null,\n        isLoading: false,\n        isSuccess: false,\n        isError: true,\n        msg: 'E-postadress är redan registrerad.'\n      }\n    }\n    case REGISTER_RESET: {\n      return {\n        ...state,\n        firstname: '',\n        lastname: '',\n        email: '',\n        password: '',\n        passwordconfirm: '',\n        firstnameIsValid: null,\n        lastnameIsValid: null,\n        emailIsValid: null,\n        passwordIsValid: null,\n        passwordconfirmIsValid: null,\n        isLoading: false,\n        isSuccess: false,\n        isError: false,\n        msg: '',\n      }\n    }\n    default:\n      break\n  }\n  return state\n}\n\nexport default registerReducer","export const REGISTER_SUBMIT = 'REGISTER_SUBMITING'\nexport const REGISTER_ERROR = 'REGISTER_ERROR'\nexport const REGISTER_ERROR_EMAIL_TAKEN = 'REGISTER_ERROR_EMAIL_TAKEN'\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS'\nexport const REGISTER_VALIDATE = 'REGISTER_VALIDATE'\nexport const REGISTER_INPUT = 'REGISTER_INPUT'\nexport const REGISTER_RESET = 'REGISTER_RESET'\n","import { combineReducers } from 'redux'\nimport loginReducer from './loginReducer.js'\nimport registerReducer from './registerReducer.js'\n\nconst rootReducer = combineReducers({\n  login: loginReducer,\n  register: registerReducer,\n})\n\nexport default rootReducer","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers/rootReducer.js'\n\nconst store = createStore(rootReducer, applyMiddleware(thunk))\n\nexport default store","import * as types from '../actionTypes/register.js'\nimport { HOST } from '../../utils.js'\n\nexport const input = field => ({\n  type: types.REGISTER_INPUT,\n  field\n})\n\nexport const validate = field => ({\n  type: types.REGISTER_VALIDATE,\n  field\n})\n\nexport const reset = () => ({ type: types.REGISTER_RESET })\n\nexport const validateInput = field => (dispatch, getState) => {\n\n  if(field.value.length === 0) {\n    return dispatch({ type: types.REGISTER_VALIDATE, field: { name: field.name, isValid: null }})\n  }\n\n  switch(field.name) {\n    case 'email':\n      const emailIsValid = /^[\\w.]+@iths.se$/i.test(field.value)\n      return dispatch({ type: types.REGISTER_VALIDATE, field: { name: 'email', isValid: emailIsValid }})\n    case 'firstname':\n      const firstnameIsValid = /^[a-z]+$/i.test(field.value)\n      return dispatch({ type: types.REGISTER_VALIDATE, field: { name: 'firstname', isValid: firstnameIsValid }})\n    case 'lastname':\n      const lastnameIsValid = /^[a-z]+$/i.test(field.value)\n      return dispatch({ type: types.REGISTER_VALIDATE, field: { name: 'lastname', isValid: lastnameIsValid }})\n    case 'password':\n      const passwordIsValid = /.{8,}/.test(field.value)\n      return dispatch({ type: types.REGISTER_VALIDATE, field: { name: 'password', isValid: passwordIsValid }})\n    case 'passwordconfirm':\n      const passwordconfirmIsValid = field.value === getState().register.password\n      return dispatch({ type: types.REGISTER_VALIDATE, field: { name: 'passwordconfirm', isValid: passwordconfirmIsValid }})\n    default:\n      return\n  }\n} \n\nexport const submitRegistration = () => async (dispatch, getState) => {\n\n  const {\n    email,\n    firstname,\n    lastname,\n    password,\n    passwordconfirm\n  } = getState().register\n\n  dispatch({ type: types.REGISTER_SUBMIT })\n\n  try {\n    const res = await fetch(`${HOST}/api/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ email , firstname, lastname, password, passwordconfirm })\n    })\n\n    if(res.status !== 200) {\n      throw Error(res.status)\n    }\n    dispatch({ type: types.REGISTER_SUCCESS })\n  } catch(error) {\n    if(Number(error.message) === 401) {\n      dispatch({ type: types.REGISTER_ERROR_EMAIL_TAKEN })\n    } else {\n      dispatch({ type: types.REGISTER_ERROR })\n    }\n    \n  }\n}","import React, { useEffect } from 'react'\nimport TextField, { Label } from '../Components/Form/TextField.js'\nimport SubmitButton from '../Components/Form/SubmitButton.js'\nimport FormContainer from '../Components/Form/FormContainer.js'\nimport { connect } from 'react-redux'\nimport debounce, { timeout } from '../utils.js'\nimport Message from '../Components/Message.js'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport * as actions from '../store/actions/register.js'\n\nconst Register = ({ register, isFormValid, dispatch }) => {\n\n  useEffect(() => {\n    return () => {\n      dispatch(actions.reset())\n      clearTimeout(timeout)\n    }\n  }, [dispatch])\n\n  const handleSubmit = async e => {\n    e.preventDefault()\n    dispatch(actions.submitRegistration())\n  }\n\n  const handleChange = e => {\n    const { name, value } = e.target\n    dispatch(actions.input({ name, value }))\n    debounce(1000, () => dispatch(actions.validateInput({ name, value })))\n  }\n\n  return (\n    <FormContainer maxWidth='600px'>\n      <h1>Registrering</h1>\n      <Message error={register.isError} success={register.isSuccess} msg={register.msg} />\n      <form \n        onSubmit={handleSubmit}\n      >\n        <div className=\"inputContainer\">\n          <TextField\n            name='email'\n            placeholder='E-post'\n            onChange={handleChange}\n            value={register.email}\n            valid={register.emailIsValid}\n            onBlur={e => dispatch(actions.validateInput({ name: e.target.name, value: e.target.value }))}\n          />\n          {!register.emailIsValid && register.emailIsValid !== null && <Label htmlFor='email'>Ange giltlig e-postadress som slutar på @iths.se</Label>}\n        </div>\n        <div className=\"inputContainer\">\n          <TextField\n            name='firstname'\n            placeholder='Förnamn'\n            halfWidth={true}\n            onChange={handleChange}\n            value={register.firstname}\n            valid={register.firstnameIsValid}\n            onBlur={e => dispatch(actions.validateInput({ name: e.target.name, value: e.target.value }))}\n          />\n          {!register.firstnameIsValid && register.firstnameIsValid !== null &&\n          <Label htmlFor='firstname'>Endast bokstäver</Label>}\n          <TextField\n            name='lastname'\n            placeholder='Efternamn'\n            halfWidth={true}\n            onChange={handleChange}\n            value={register.lastname}\n            valid={register.lastnameIsValid}\n            onBlur={e => dispatch(actions.validateInput({ name: e.target.name, value: e.target.value }))}\n          />\n          {!register.lastnameIsValid && register.lastnameIsValid !== null &&\n          <Label htmlFor='lastname'>Endast bokstäver</Label>}\n        </div>\n        <div className=\"inputContainer\">\n          <TextField\n            name='password'\n            type='password'\n            placeholder='Lösenord'\n            onChange={handleChange}\n            value={register.password}\n            valid={register.passwordIsValid}\n            onBlur={e => dispatch(actions.validateInput({ name: e.target.name, value: e.target.value }))}\n          />\n          {!register.passwordIsValid && register.passwordIsValid !== null &&\n          <Label htmlFor='password'>Minst 8 tecken</Label>}\n        </div>\n        <div className=\"inputContainer\">\n          <TextField\n            name='passwordconfirm'\n            type='password'\n            placeholder='Bekräfta lösenord'\n            onChange={handleChange}\n            value={register.passwordconfirm}\n            valid={register.passwordconfirmIsValid}\n            onBlur={e => dispatch(actions.validateInput({ name: e.target.name, value: e.target.value }))}\n          />\n          {!register.passwordconfirmIsValid && register.passwordconfirmIsValid !== null &&\n          <Label htmlFor='password'>Lösenord måste matcha</Label>}\n        </div>\n        <SubmitButton\n          type='submit'\n          disabled={register.isLoading || !isFormValid }\n        >\n          {register.isLoading ? <><FontAwesomeIcon icon={['fas', 'spinner']} spin /> Registrera</> : 'Registrera'}\n        </SubmitButton>\n      </form>\n    </FormContainer>\n  )\n}\n\nconst isFormValid = state => {\n    return state.register.emailIsValid\n      && state.register.firstnameIsValid\n      && state.register.lastnameIsValid\n      && state.register.passwordIsValid\n      && state.register.passwordconfirmIsValid\n  }\n\nconst mapStateToProps = state => {\n  return {\n    register: state.register,\n    isFormValid: isFormValid(state)\n  }\n}\n\nexport default connect(mapStateToProps)(Register)\n","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\"\nimport { createGlobalStyle } from 'styled-components'\nimport Navbar from './Components/Navbar/Navbar.js'\nimport Home from './pages/Home.js'\nimport About from './pages/About.js'\nimport Login from './pages/Login.js'\nimport { Provider } from 'react-redux'\nimport store from './store/index.js'\nimport Register from './pages/Register.js'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faJsSquare } from '@fortawesome/free-brands-svg-icons'\nimport { faCircle, faSquare, faSpinner, faExclamationCircle, faCheckCircle } from '@fortawesome/free-solid-svg-icons'\nimport { faEnvelope } from '@fortawesome/free-regular-svg-icons'\nimport { URL } from './utils'\n\nlibrary.add(\n  faJsSquare,\n  faCircle,\n  faSquare,\n  faEnvelope,\n  faSpinner,\n  faExclamationCircle,\n  faCheckCircle,\n  )\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n  }\n\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: 'Roboto', sans-serif;\n    background-color: rgba(0,0,0,.03)\n  }\n\n  #root {\n      width: 100vw;\n      max-width: 100vw;\n      display: flex;\n      align-items: center;\n      flex-direction: column;\n    }\n`\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Router>\n        <GlobalStyle />\n        <Navbar />\n        <Switch>\n          <Route exact path={`${URL}/`}>\n            <Home />\n          </Route>\n          <Route path={`${URL}/about`}>\n            <About />\n          </Route>\n          <Route path={`${URL}/login`}>\n            <Login />\n          </Route>\n          <Route path={`${URL}/register`}>\n            <Register />\n          </Route>\n        </Switch>\n      </Router>\n    </Provider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}